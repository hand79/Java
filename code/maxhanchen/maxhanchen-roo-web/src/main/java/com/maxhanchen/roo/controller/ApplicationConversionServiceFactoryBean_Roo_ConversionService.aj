// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.maxhanchen.roo.controller;

import com.maxhanchen.dao.po.BackUser;
import com.maxhanchen.dao.po.DownLoadFile;
import com.maxhanchen.dao.po.FrontUser;
import com.maxhanchen.dao.po.Role;
import com.maxhanchen.dao.po.User;
import com.maxhanchen.dao.service.FrontUserService;
import com.maxhanchen.dao.service.UserService;
import com.maxhanchen.roo.controller.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    FrontUserService ApplicationConversionServiceFactoryBean.frontUserService;
    
    @Autowired
    UserService ApplicationConversionServiceFactoryBean.userService;
    
    public Converter<BackUser, String> ApplicationConversionServiceFactoryBean.getBackUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.maxhanchen.dao.po.BackUser, java.lang.String>() {
            public String convert(BackUser backUser) {
                return new StringBuilder().append(backUser.getUsername()).append(' ').append(backUser.getPassword()).append(' ').append(backUser.getAmount()).append(' ').append(backUser.getRoles()).toString();
            }
        };
    }
    
    public Converter<Long, BackUser> ApplicationConversionServiceFactoryBean.getIdToBackUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.maxhanchen.dao.po.BackUser>() {
            public com.maxhanchen.dao.po.BackUser convert(java.lang.Long id) {
                return BackUser.findBackUser(id);
            }
        };
    }
    
    public Converter<String, BackUser> ApplicationConversionServiceFactoryBean.getStringToBackUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.maxhanchen.dao.po.BackUser>() {
            public com.maxhanchen.dao.po.BackUser convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), BackUser.class);
            }
        };
    }
    
    public Converter<DownLoadFile, String> ApplicationConversionServiceFactoryBean.getDownLoadFileToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.maxhanchen.dao.po.DownLoadFile, java.lang.String>() {
            public String convert(DownLoadFile downLoadFile) {
                return new StringBuilder().append(downLoadFile.getFilename()).append(' ').append(downLoadFile.getContentType()).append(' ').append(downLoadFile.getContent()).append(' ').append(downLoadFile.getCreateTime()).toString();
            }
        };
    }
    
    public Converter<Long, DownLoadFile> ApplicationConversionServiceFactoryBean.getIdToDownLoadFileConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.maxhanchen.dao.po.DownLoadFile>() {
            public com.maxhanchen.dao.po.DownLoadFile convert(java.lang.Long id) {
                return DownLoadFile.findDownLoadFile(id);
            }
        };
    }
    
    public Converter<String, DownLoadFile> ApplicationConversionServiceFactoryBean.getStringToDownLoadFileConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.maxhanchen.dao.po.DownLoadFile>() {
            public com.maxhanchen.dao.po.DownLoadFile convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), DownLoadFile.class);
            }
        };
    }
    
    public Converter<FrontUser, String> ApplicationConversionServiceFactoryBean.getFrontUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.maxhanchen.dao.po.FrontUser, java.lang.String>() {
            public String convert(FrontUser frontUser) {
                return new StringBuilder().append(frontUser.getUsername()).append(' ').append(frontUser.getPassword()).append(' ').append(frontUser.getAmount()).append(' ').append(frontUser.getAddress()).toString();
            }
        };
    }
    
    public Converter<Long, FrontUser> ApplicationConversionServiceFactoryBean.getIdToFrontUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.maxhanchen.dao.po.FrontUser>() {
            public com.maxhanchen.dao.po.FrontUser convert(java.lang.Long id) {
                return frontUserService.findFrontUser(id);
            }
        };
    }
    
    public Converter<String, FrontUser> ApplicationConversionServiceFactoryBean.getStringToFrontUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.maxhanchen.dao.po.FrontUser>() {
            public com.maxhanchen.dao.po.FrontUser convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), FrontUser.class);
            }
        };
    }
    
    public Converter<Role, String> ApplicationConversionServiceFactoryBean.getRoleToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.maxhanchen.dao.po.Role, java.lang.String>() {
            public String convert(Role role) {
                return new StringBuilder().append(role.getRole()).toString();
            }
        };
    }
    
    public Converter<Long, Role> ApplicationConversionServiceFactoryBean.getIdToRoleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.maxhanchen.dao.po.Role>() {
            public com.maxhanchen.dao.po.Role convert(java.lang.Long id) {
                return Role.findRole(id);
            }
        };
    }
    
    public Converter<String, Role> ApplicationConversionServiceFactoryBean.getStringToRoleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.maxhanchen.dao.po.Role>() {
            public com.maxhanchen.dao.po.Role convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Role.class);
            }
        };
    }
    
    public Converter<User, String> ApplicationConversionServiceFactoryBean.getUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.maxhanchen.dao.po.User, java.lang.String>() {
            public String convert(User user) {
                return new StringBuilder().append(user.getUsername()).append(' ').append(user.getPassword()).append(' ').append(user.getRole()).append(' ').append(user.getEmail()).toString();
            }
        };
    }
    
    public Converter<Long, User> ApplicationConversionServiceFactoryBean.getIdToUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.maxhanchen.dao.po.User>() {
            public com.maxhanchen.dao.po.User convert(java.lang.Long id) {
                return userService.findUser(id);
            }
        };
    }
    
    public Converter<String, User> ApplicationConversionServiceFactoryBean.getStringToUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.maxhanchen.dao.po.User>() {
            public com.maxhanchen.dao.po.User convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), User.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getBackUserToStringConverter());
        registry.addConverter(getIdToBackUserConverter());
        registry.addConverter(getStringToBackUserConverter());
        registry.addConverter(getDownLoadFileToStringConverter());
        registry.addConverter(getIdToDownLoadFileConverter());
        registry.addConverter(getStringToDownLoadFileConverter());
        registry.addConverter(getFrontUserToStringConverter());
        registry.addConverter(getIdToFrontUserConverter());
        registry.addConverter(getStringToFrontUserConverter());
        registry.addConverter(getRoleToStringConverter());
        registry.addConverter(getIdToRoleConverter());
        registry.addConverter(getStringToRoleConverter());
        registry.addConverter(getUserToStringConverter());
        registry.addConverter(getIdToUserConverter());
        registry.addConverter(getStringToUserConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
